# -*- coding: utf-8 -*-
"""task manager section 4.2 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wFh0cPjHKf7ZI9iP46rPAJjCUB060rs2
"""

def display_menu():
    """
    Display menu options - Week 3: print() formatting only

    >>> display_menu()  # doctest: +SKIP
    1. Add task
    2. List tasks
    3. Remove task
    4. Quit
    """
    print("1. Add task")
    print("2. List tasks")
    print("3. Remove task")
    print("4. Quit")

def get_user_choice():
    """
    Get and validate user choice - Week 6 input validation style

    >>> # Manual test with input expected
    >>> # get_user_choice()  # doctest: +SKIP
    """
    choice = input("Enter your choice (1-4): ").strip()

    # Week 6: basic validation using if/else
    if choice in ["1", "2", "3", "4"]:
        return choice
    else:
        print("Invalid option, please enter a number between 1 and 4.")
        return None

def add_task(task_list):
    """
    Add task with name and priority - Week 5: user input and dicts

    >>> tasks = []
    >>> # add_task(tasks)  # doctest: +SKIP
    """
    task_name = input("Enter task name: ").strip()
    priority = input("Enter priority (Low/Medium/High): ").strip()
    task = {"name": task_name, "priority": priority}
    task_list.append(task)
    print("Task added!")

def list_tasks(task_list):
    """
    Display tasks in list - Week 4: list iteration and indexing

    >>> list_tasks([])  # doctest: +SKIP
    No tasks available.

    >>> list_tasks([{'name': 'Buy milk', 'priority': 'High'}])  # doctest: +SKIP
    0: Buy milk (High)
    """
    if not task_list:
        print("No tasks available.")
    else:
        for i in range(len(task_list)):
            task = task_list[i]
            print(f"{i}: {task['name']} ({task['priority']})")

def remove_task(task_list):
    """
    Remove task by index - Week 6: try/except, int(), list deletion

    >>> tasks = [{'name': 'Buy milk', 'priority': 'High'}]
    >>> # remove_task(tasks)  # doctest: +SKIP
    """
    try:
        index_str = input("Enter the index of the task to remove: ").strip()
        index = int(index_str)
        del task_list[index]
        print("Task removed!")
    except (ValueError, IndexError):
        print("Invalid index.")

def main():
    """
    Main program loop - Week 5: while True and control logic

    No doctest required.
    """
    task_list = []
    while True:
        display_menu()
        choice = get_user_choice()

        if choice == "1":
            add_task(task_list)
        elif choice == "2":
            list_tasks(task_list)
        elif choice == "3":
            remove_task(task_list)
        elif choice == "4":
            print("Goodbye!")
            break
        elif choice is None:
            continue
        else:
            print("Invalid option, please try again.")